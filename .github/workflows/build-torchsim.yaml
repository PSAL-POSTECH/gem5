name: Build and Release Gem5 for torchsim

on:
  push:
    tags:
      - 'v*.*.*'  # Matches version tags like v1.0.0

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Pull Gem5 Prebuilt Dependency Image
        run: docker pull ghcr.io/gem5/ubuntu-22.04_all-dependencies:latest

      - name: Checkout llvm-project
        uses: actions/checkout@v4
        with:
          repository: PSAL-POSTECH/gem5
          ref: TorchSim
          path: gem5

      - name: Build Gem5
        run: |
          docker run --rm -v ${{ github.workspace }}:/workspace -w /workspace/gem5 \
          ghcr.io/gem5/ubuntu-22.04_all-dependencies:latest \
          bash -c '
            cd gem5 && git pull
            scons build/RISCV/gem5.opt -j$(nproc)
          '

      - name: Archive Build Artifacts
        run: |
          mkdir -p release
          cp gem5/build/RISCV/gem5.opt release/
          tar -czvf gem5-release.tar.gz release

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: gem5-release.tar.gz

  trigger:
    name: Trigger build base image
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Trigger building base iamge
        run: gh api /repos/PSAL-POSTECH/PyTorchSim/dispatches -f event_type='build_base'
        env:
          GH_TOKEN: ${{ secrets.GIT_ACCESS_TOKEN }}